version: "3"

### Creates a named network with the default bridge driver
# The network is shared between restheart and mongodb only
# See: https://docs.docker.com/engine/userguide/networking/dockernetworks/
# See: https://docs.docker.com/engine/reference/commandline/network_create/
networks:
   backend:

### Create a permanent, named data volume
# This makes much easier to identify where the mongodb data is stored on host
# See: https://docs.docker.com/engine/userguide/containers/dockervolumes/#mount-a-shared-storage-volume-as-a-data-volume
volumes:
   datadb:

services:
   restheart-platform-security:
      image: softinstigate/restheart-platform-security
      container_name: restheart-platform-security
      build:
         context: ./
         dockerfile: ./Docker/Dockerfile-security
      depends_on:
         - restheart-platform-core
      networks:
         - backend
      volumes:
         - ./security.log:/var/log/restheart-platform-security.log:rw
      ports:
         - "8080:8080"

   restheart-platform-core:
      image: softinstigate/restheart-platform-core
      container_name: restheart-platform-core
      build:
         context: ./
         dockerfile: ./Docker/Dockerfile-core
      depends_on:
         - restheart-platform-mongodb
         - restheart-platform-mongodb-initiate
      networks:
         - backend
      volumes:
         # If you have a valid license key, copy it into lickey/ folder
         - ./lickey:/opt/restheart-platform/lickey:rw
         - ./core.log:/var/log/restheart-platform-core.log:rw

   restheart-platform-mongodb:
      image: mongo:4.2.2
      container_name: restheart-platform-mongodb
      environment:
         MONGO_INITDB_ROOT_USERNAME: restheart
         MONGO_INITDB_ROOT_PASSWORD: R3ste4rt!
      command: ["--bind_ip_all", "--auth", "--replSet", "rs0"]
      volumes:
         - datadb:/data/db
      networks:
         - backend
      ### Uncomment below if you want to map mongodb port externally
      #ports:
      #   - "27017:27017"

   restheart-platform-mongodb-initiate:
      image: mongo:4.2.2
      networks:
         - backend
      depends_on:
         - restheart-platform-mongodb
      entrypoint: bash -c "for i in {1..100}; do mongo  --host restheart-platform-mongodb --username restheart --password 'R3ste4rt!' --eval 'if (!rs.status().ok) rs.initiate();' && break || sleep 2; done"
